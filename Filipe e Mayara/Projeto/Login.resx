<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAC1AcEDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+iiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACivL9S+L1hZfEyDw
        4Chsh+6nuM/dlPQZ9BXp4IYAg5BoAWiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACii
        igAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACii
        igAooooAKKKKACvPfix49j8HeHGjt3B1K6BSFQeVHdq63xHr9l4Z0O51S+kCRQrkAnlj2Ar428YeKL3x
        d4huNUu3PznbEh6InYCgDFkuJZLhp5JGaZm3NITkls5zX1V8G/Hi+J/Dq6feSj+0rJQjAnl17Gvk89jW
        54V8SXfhTX7bVrNsvE43oejr3BoA+4qKyPDXiGy8UaFbapYuGjmXlc8q3cGtegAooooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKiubiK0tpLieRY4o1LM7HAAqRmCKWYgAckmvm/4yfFL+
        1ZpPD+izn7Gh23MyH/WH0HtQBzfxY+IsvjTWja2bMNKtWIiX/noe7GvNmznmkooAKKKKAPRvhV8RJfBe
        tCC6dn0u5IWVM/cP94V9aW1zDeW0dxbyLJFIu5XU5BFfAua9n+DnxTOhzpoGtTsdPkOIJWOfJY9vpQB9
        MUU1HSWNXRgysMgjvTqACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
        KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKQkAZNBIUEk4Ar5/+
        LnxfZ2n8O+HZsAHZc3aHr6qp/maAF+MPxbBEvh3w/Oc5K3Vyh4/3V/xrwLcTnPJNKSzkk8knJJ6mm7W9
        D+VA7MSilwfQ0mD6UCsFFLtb0P5UhBHUUDswpQcUAE9ATTlHPKnFAWZ7h8Ivi6dOMXh/xDOTakhba5c8
        xn+6x9K+ikdZEDowZSMgjvXwJ82ehr2T4V/GCfQ3h0TXZTLp5IWKdzkw+xPpQI+maKjhmiuIUmhdXjdQ
        yspyCDUlABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAU
        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
        D5lswfmb/e9B7V9DWttDZ2sdvbxpHFGu1UQYAFOyvcjnk1y307EuBisu68N6PfTGa60uymlPV5YEZj+J
        FatFDQRk4/C7FS1020srX7NbW0MMHP7uNAq89eBVez8PaTp9wZ7PTLO3lxjfFCqtj0yBWnmjNFkHPLXU
        KKKKZIUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFA
        BRRRQAUUUUAFFFFABRRRQAUUUUANdFkUq6hlPUGuT1r4ZeEtecyXekQrKTkyRDYT+VddRQB5Ncfs+eEZ
        ZC0ct9ED/CJAR/Kp7P4B+D7UgyLdXBH/AD0k4r1KigDn9G8E+HNAH/Et0m2hb+9tyf1rjPjtro0rwI1j
        G2Jb5xFgcfL3r1InFfK3x18TLrfjT7BA4a309fL4PVz1oA8sGFPPavo39nTW/P0TUdGdhut5BKgJ6huv
        8q+ca7z4R+JB4b8e2ckrbbe5/cS56DPQ0AfWOoaFpeqoUv7C3uFPXfGCfzrlLr4O+CLpix0WOIn/AJ5M
        RXdghhkdKWgDgLf4M+CLchjo6ykdpHJFdXpfhzR9FQJp2nW1uB3RBn861KKACiiigAooooAKKKKACiii
        gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
        gAooooAKKKKACiiigAooooAKKKKACiig9KAOY8feKYPCXhS71CWQLMVKQKerOelfF93cy3t3LczsWllc
        uxPcmvdfif4T+I3jfXyYdCI0u2JW2T7ZAM/7RBfqa4I/BP4hk/8AIv5/7fbf/wCOUAcBxT0cxuGVsMpy
        rDtXef8ACkviF/0L3/k7b/8Axyj/AIUl8Qv+he/8nbf/AOOUAe+fCXxxF4t8LwwzSg6jZqI51PVgOjV6
        H1r5a8MfDr4peE9ah1PT9DKyIfmT7bBtde4P7yvpnTJ7u40+GW+tWtbllBkhLq2w9xlSQaALlFFFABRR
        RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
        RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
        RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
        RQAUUUUAFFFFAH//2Q==
</value>
  </data>
</root>